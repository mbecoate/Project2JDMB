#------------------------------
#SQL Server Always On 1 in VNet1 (add LRS)
#------------------------------

/*resource "azurerm_subnet_network_security_group_association" "example" {
  subnet_id                 = Module.Network.VNet1subnetsql.id
  network_security_group_id = azurerm_network_security_group.example.id
}

resource "azurerm_network_security_group" "example" {
  name                = "${var.prefix}-NSG"
  location            = azurerm_resource_group.RG.location
  resource_group_name = azurerm_resource_group.RG.name
}

resource "azurerm_network_security_rule" "RDPRule" {
  name                        = "RDPRule"
  resource_group_name         = azurerm_resource_group.RG.name
  priority                    = 1000
  direction                   = "Inbound"
  access                      = "Allow"
  protocol                    = "Tcp"
  source_port_range           = "*"
  destination_port_range      = 3389
  source_address_prefix       = "167.220.255.0/25"
  destination_address_prefix  = "*"
  network_security_group_name = azurerm_network_security_group.example.name
}

resource "azurerm_network_security_rule" "MSSQLRule" {
  name                        = "MSSQLRule"
  resource_group_name         = azurerm_resource_group.RG.name
  priority                    = 1001
  direction                   = "Inbound"
  access                      = "Allow"
  protocol                    = "Tcp"
  source_port_range           = "*"
  destination_port_range      = 1433
  source_address_prefix       = "167.220.255.0/25"
  destination_address_prefix  = "*"
  network_security_group_name = azurerm_network_security_group.example.name
}
*/

resource "azurerm_network_interface" "sqlnic1" {
  name                = "sqlservernic1"
  location            = var.location1
  resource_group_name = azurerm_resource_group.RG.name

  ip_configuration {
    name                          = "sqlipconfiguration1"
    subnet_id                     = module.Network.v1subnetsql.id
    private_ip_address_allocation = "Static"
    private_ip_address            = "10.0.4.7"
  }
}

/*
resource "azurerm_network_interface_security_group_association" "example" {
  network_interface_id      = azurerm_network_interface.example.id
  network_security_group_id = azurerm_network_security_group.example.id
}
*/

resource "azurerm_availability_set" "avs1" {
  name                = "avs1-aset"
  location            = azurerm_resource_group.RG.location
  resource_group_name = azurerm_resource_group.RG.name
}

resource "azurerm_virtual_machine" "sqlvm1" {
  name                  = "sqlservervm1"
  location              = var.location1
  resource_group_name   = azurerm_resource_group.RG.name
  network_interface_ids = [azurerm_network_interface.sqlnic1.id]
  vm_size               = "Standard_B2s"
  availability_set_id = azurerm_availability_set.avs1.id

  storage_image_reference {
    publisher = "MicrosoftSQLServer"
    offer     = "SQL2017-WS2016"
    sku       = "SQLDEV"
    version   = "latest"
  }

  storage_os_disk {
    name              = "team8sqlstorage1-OSDisk"
    caching           = "ReadOnly"
    create_option     = "FromImage"
    managed_disk_type = "Premium_LRS"
  }

  os_profile {
    computer_name  = "sqlservervm"
    admin_username = "azureuser"
    admin_password = "Adminpassword*"
  }

  os_profile_windows_config {
    timezone                  = "Eastern Standard Time"
    provision_vm_agent        = true
    enable_automatic_upgrades = true
  }
}


#------------------------------
#SQL Server Always On #2 in Vnet1
#------------------------------

resource "azurerm_network_interface" "sqlnic2" {
  name                = "sqlservernic2"
  location            = var.location1
  resource_group_name = azurerm_resource_group.RG.name

  ip_configuration {
    name                          = "sqlipconfiguration2"
    subnet_id                     = module.Network.v1subnetsql.id
    private_ip_address_allocation = "Static"
    private_ip_address            = "10.0.4.8"
  }
}

resource "azurerm_virtual_machine" "sqlvm2" {
  name                  = "sqlservervm2"
  location              = var.location1
  resource_group_name   = azurerm_resource_group.RG.name
  network_interface_ids = [azurerm_network_interface.sqlnic2.id]
  vm_size               = "Standard_B2s"
  availability_set_id = azurerm_availability_set.avs1.id

  storage_image_reference {
    publisher = "MicrosoftSQLServer"
    offer     = "SQL2017-WS2016"
    sku       = "SQLDEV"
    version   = "latest"
  }

  storage_os_disk {
    name              = "team8sqlstorage2-OSDisk"
    caching           = "ReadOnly"
    create_option     = "FromImage"
    managed_disk_type = "Premium_LRS"
  }

  os_profile {
    computer_name  = "sqlservervm"
    admin_username = "azureuser"
    admin_password = "Adminpassword*"
  }

  os_profile_windows_config {
    timezone                  = "Eastern Standard Time"
    provision_vm_agent        = true
    enable_automatic_upgrades = true
  }
  
}



#------------------------------
#SQL Server Always On 1 in VNet2 (add LRS)
#------------------------------

/*resource "azurerm_subnet_network_security_group_association" "example" {
  subnet_id                 = Module.Network.VNet1subnetsql.id
  network_security_group_id = azurerm_network_security_group.example.id
}

resource "azurerm_network_security_group" "example" {
  name                = "${var.prefix}-NSG"
  location            = azurerm_resource_group.RG.location
  resource_group_name = azurerm_resource_group.RG.name
}

resource "azurerm_network_security_rule" "RDPRule" {
  name                        = "RDPRule"
  resource_group_name         = azurerm_resource_group.RG.name
  priority                    = 1000
  direction                   = "Inbound"
  access                      = "Allow"
  protocol                    = "Tcp"
  source_port_range           = "*"
  destination_port_range      = 3389
  source_address_prefix       = "167.220.255.0/25"
  destination_address_prefix  = "*"
  network_security_group_name = azurerm_network_security_group.example.name
}

resource "azurerm_network_security_rule" "MSSQLRule" {
  name                        = "MSSQLRule"
  resource_group_name         = azurerm_resource_group.RG.name
  priority                    = 1001
  direction                   = "Inbound"
  access                      = "Allow"
  protocol                    = "Tcp"
  source_port_range           = "*"
  destination_port_range      = 1433
  source_address_prefix       = "167.220.255.0/25"
  destination_address_prefix  = "*"
  network_security_group_name = azurerm_network_security_group.example.name
}
*/

resource "azurerm_network_interface" "sqlnic3" {
  name                = "sqlservernic3"
  location            = var.location2
  resource_group_name = azurerm_resource_group.RG.name

  ip_configuration {
    name                          = "sqlipconfiguration1"
    subnet_id                     = module.Network.v2subnetsql.id
    private_ip_address_allocation = "Static"
    private_ip_address            = "10.1.4.7"
  }
}


/*
resource "azurerm_network_interface_security_group_association" "example" {
  network_interface_id      = azurerm_network_interface.example.id
  network_security_group_id = azurerm_network_security_group.example.id
}
*/

resource "azurerm_availability_set" "avs2" {
  name                = "avs2-aset"
  location            = var.location2
  resource_group_name = azurerm_resource_group.RG.name
}

resource "azurerm_virtual_machine" "sqlvm3" {
  name                  = "sqlservervm3"
  location              = var.location2
  resource_group_name   = azurerm_resource_group.RG.name
  network_interface_ids = [azurerm_network_interface.sqlnic3.id]
  vm_size               = "Standard_B2s"
  availability_set_id = azurerm_availability_set.avs2.id

  storage_image_reference {
    publisher = "MicrosoftSQLServer"
    offer     = "SQL2017-WS2016"
    sku       = "SQLDEV"
    version   = "latest"
  }

  storage_os_disk {
    name              = "team8sqlstorage3-OSDisk"
    caching           = "ReadOnly"
    create_option     = "FromImage"
    managed_disk_type = "Premium_LRS"
  }

  os_profile {
    computer_name  = "sqlservervm"
    admin_username = "azureuser"
    admin_password = "Adminpassword*"
  }

  os_profile_windows_config {
    timezone                  = "Eastern Standard Time"
    provision_vm_agent        = true
    enable_automatic_upgrades = true
  }
}


#------------------------------
#SQL Server Always On #2 in Vnet2
#------------------------------

resource "azurerm_network_interface" "sqlnic4" {
  name                = "sqlservernic4"
  location            = var.location2
  resource_group_name = azurerm_resource_group.RG.name

  ip_configuration {
    name                          = "sqlipconfiguration4"
    subnet_id                     = module.Network.v2subnetsql.id
    private_ip_address_allocation = "Static"
    private_ip_address            = "10.1.4.8"
  }
}

resource "azurerm_virtual_machine" "sqlvm4" {
  name                  = "sqlservervm4"
  location              = var.location2
  resource_group_name   = azurerm_resource_group.RG.name
  network_interface_ids = [azurerm_network_interface.sqlnic4.id]
  vm_size               = "Standard_B2s"
  availability_set_id = azurerm_availability_set.avs2.id

  storage_image_reference {
    publisher = "MicrosoftSQLServer"
    offer     = "SQL2017-WS2016"
    sku       = "SQLDEV"
    version   = "latest"
  }

  storage_os_disk {
    name              = "team8sqlstorage4-OSDisk"
    caching           = "ReadOnly"
    create_option     = "FromImage"
    managed_disk_type = "Premium_LRS"
  }

  os_profile {
    computer_name  = "sqlservervm"
    admin_username = "azureuser"
    admin_password = "Adminpassword*"
  }

  os_profile_windows_config {
    timezone                  = "Eastern Standard Time"
    provision_vm_agent        = true
    enable_automatic_upgrades = true
  }

}










#change to app services or remove?
#We want to make our Load Balancer Public to go to our Web Tier VMSS
/*
resource "azurerm_public_ip" "V1toWebPIP" {
  name                = "PublicIPForLB1"
  location            = "east US"
  resource_group_name = azurerm_resource_group.RG.name
  allocation_method   = "Static"
  domain_name_label   = "lb1-public-ip"
}
resource "azurerm_lb" "V1toWebLB" {
  name                = "V1WLB"
  location            = azurerm_resource_group.RG.location
  resource_group_name = azurerm_resource_group.RG.name

  frontend_ip_configuration {
    name                 = "PublicIPAddress1"
    public_ip_address_id = azurerm_public_ip.V1toWebPIP.id
    
  }
}
resource "azurerm_lb_backend_address_pool" "V1Pbpepool1" {
  resource_group_name = azurerm_resource_group.RG.name
  loadbalancer_id     = azurerm_lb.V1toWebLB.id
  name                = "V1PBackEndAddressPool1"
}
resource "azurerm_lb_rule" "V1lbrule1" {
  resource_group_name            = azurerm_resource_group.RG.name
  loadbalancer_id                = azurerm_lb.V1toWebLB.id
  name                           = "ssh"
  protocol                       = "Tcp"
  frontend_port                  = 22
  backend_port                   = 22
  frontend_ip_configuration_name = "PublicIPAddress1"
}
resource "azurerm_lb_rule" "V1lbrule2" {
  resource_group_name            = azurerm_resource_group.RG.name
  loadbalancer_id                = azurerm_lb.V1toWebLB.id
  name                           = "sql"
  protocol                       = "Tcp"
  frontend_port                  = 1433
  backend_port                   = 1433
  frontend_ip_configuration_name = "PublicIPAddress1"
}
resource "azurerm_lb_rule" "V1lbrule3" {
  resource_group_name            = azurerm_resource_group.RG.name
  loadbalancer_id                = azurerm_lb.V1toWebLB.id
  name                           = "web"
  protocol                       = "Tcp"
  frontend_port                  = 80
  backend_port                   = 80
  frontend_ip_configuration_name = "PublicIPAddress1"
}
resource "azurerm_lb_probe" "V1PHealthProbe1" {
  resource_group_name = azurerm_resource_group.RG.name
  loadbalancer_id     = azurerm_lb.V1toWebLB.id
  name                = "http-probe"
  protocol            = "Http"
  request_path        = "/health"
  port                = 80
}
*/